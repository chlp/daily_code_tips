[
  {
    "title": "Инициализация переменных",
    "points": [
      "В каждом ли методе проверяется корректность входных параметров?",
      "Переменные объявляются около места их использования в первый раз?",
      "Инициализировали ли вы переменные при их объявлении, если такое возможно?",
      "Если переменные невозможно объявить и инициализировать одновременно, вы инициализировали их около места использования в первый раз?",
      "Правильно ли инициализируются счетчики и аккумуляторы? Выполняется ли их повторная инициализация, если она необходима?",
      "Осуществляется ли правильная повторная инициализация переменных в коде, который выполняется более одного раза?",
      "Код компилируется без предупреждений? (И задали ли вы самый строгий уровень диагностики?)",
      "Если язык поддерживает неявные объявления переменных, постарались ли вы предотвратить возможные проблемы?"
    ],
    "link": "Совершенный код, Глава 10"
  },
  {
    "title": "Общие вопросы использования данных",
    "points": [
      "Все ли переменные имеют как можно меньшую область видимости?",
      "Являются ли обращения к переменным максимально сгруппированными как в плане интервала между обращениями, так и в плане общего времени жизни?",
      "Соответствуют ли управляющие структуры типам данных?",
      "Все ли объявленные переменные используются?",
      "Все ли переменные связываются в подходящее время, т. е. соблюдаете ли вы разумный баланс между гибкостью позднего связывания и соответствующей ему повышенной сложностью?",
      "Каждая ли переменная имеет одну и только одну цель?",
      "Не имеют ли какие-нибудь переменные скрытого смысла?"
    ],
    "link": "Совершенный код, Глава 10"
  },
  {
    "title": "Цитата",
    "points": [
      "Всегда пишите код так, будто сопровождать его будет склонный к насилию психопат, который знает, где вы живете."
    ],
    "link": "Martin Golding"
  },
  {
    "title": "Цитата",
    "points": [
      "Есть два способа создания дизайна программы. Один из них, это сделать его настолько простым, что в нем, очевидно, не будет недостатков. Другой способ — сделать его настолько запутанным, что в нем не будет очевидных недостатков."
    ],
    "link": "C.A. R. Hoare"
  },
  {
    "title": "Цитата",
    "points": [
      "Никакой код не может быть быстрее, чем отсутствие кода."
    ],
    "link": "Taligent's Guide to Designing Programs"
  },
  {
    "title": "Цитата",
    "points": [
      "Все должно быть сделано так просто, как это возможно. Но не проще."
    ],
    "link": "A. Einstein"
  },
  {
    "title": "Цитата",
    "points": [
      "Отлаживать код вдвое сложнее, чем писать. Поэтому, если при написании программы вы используете весь свой интеллект, вы по определению недостаточно умны, чтобы ее отладить."
    ],
    "link": "Брайан Керниган (Brian W. Kernighan)"
  },
  {
    "title": "Отладка",
    "points": [
      "Прежде чем приступать к исправлению программы, поймите суть проблемы. Случайные предположения о причинах ошибок и случайные исправления только ухудшат программу.",
      "Первый пункт в руководстве Дьявола по отладке - это \"Поиск дефектов, основанный на гадании\"; второй - \"Тщательный анализ проблемы — пустая трата времени\"."
    ],
    "link": "Совершенный код, Глава 23"
  }
]
